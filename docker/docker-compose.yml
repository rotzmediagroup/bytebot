version: 1.0.8
name: bytebot
services:
  bytebot-desktop:
    image: ghcr.io/bytebot-ai/bytebot-desktop:edge
    shm_size: "2g"
    container_name: bytebot-desktop
    restart: unless-stopped
    hostname: computer
    privileged: true
    ports:
      - "9990:9990"
    environment:
      - DISPLAY=:0
    networks:
      - bytebot-network

  postgres:
    image: postgres:16-alpine
    container_name: bytebot-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=bytebotdb
    networks:
      - bytebot-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  bytebot-agent:
    image: ghcr.io/bytebot-ai/bytebot-agent:edge
    container_name: bytebot-agent
    restart: unless-stopped
    ports:
      - "9991:9991"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/bytebotdb}
      - BYTEBOT_DESKTOP_BASE_URL=${BYTEBOT_DESKTOP_BASE_URL:-http://bytebot-desktop:9990}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - postgres
    networks:
      - bytebot-network

  bytebot-ui:
    image: ghcr.io/bytebot-ai/bytebot-ui:edge
    container_name: bytebot-ui
    restart: unless-stopped
    expose:
      - "9992"
    environment:
      - NODE_ENV=production
      - BYTEBOT_AGENT_BASE_URL=${BYTEBOT_AGENT_BASE_URL:-http://bytebot-agent:9991}
      - BYTEBOT_DESKTOP_VNC_URL=${BYTEBOT_DESKTOP_VNC_URL:-http://bytebot-desktop:9990/websockify}
    depends_on:
      - bytebot-agent
    networks:
      - bytebot-network

  auth-proxy:
    image: nginx:alpine
    expose:
      - '80'
    environment:
      - BASIC_AUTH_USER=rotz
      - BASIC_AUTH_PASSWORD=L0steden20
    command: "sh -c \"apk add --no-cache apache2-utils && htpasswd -bc /etc/nginx/.htpasswd $${BASIC_AUTH_USER} $${BASIC_AUTH_PASSWORD} && echo 'server { listen 80; location / { auth_basic \\\"Restricted\\\"; auth_basic_user_file /etc/nginx/.htpasswd; proxy_pass http://bytebot-ui:9992; proxy_set_header Host $$host; proxy_set_header X-Real-IP $$remote_addr; proxy_http_version 1.1; proxy_set_header Upgrade $$http_upgrade; proxy_set_header Connection \\\"upgrade\\\"; } }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'\"\n"
    depends_on:
      - bytebot-ui
    networks:
      - bytebot-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-proxy.rule=Host(`coolify.rotz.ai`)"
      - "traefik.http.services.auth-proxy.loadbalancer.server.port=80"
      - "coolify.resourceId=s0o40wooc8wggo0skgks0csw"
      - "coolify.applicationId=s0o40wooc8wggo0skgks0csw"
      - "coolify.type=application"

networks:
  bytebot-network:
    driver: bridge
volumes:
  postgres_data:
