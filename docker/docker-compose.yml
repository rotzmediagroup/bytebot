version: 1.0.1
name: bytebot

services:
  bytebot-desktop:
    image: ghcr.io/bytebot-ai/bytebot-desktop:edge
    shm_size: "2g"
    container_name: bytebot-desktop
    restart: unless-stopped
    hostname: computer
    privileged: true
    environment:
      - DISPLAY=:0
    networks:
      - bytebot-network

  postgres:
    image: postgres:16-alpine
    container_name: bytebot-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=bytebotdb
    networks:
      - bytebot-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  bytebot-agent:
    image: ghcr.io/bytebot-ai/bytebot-agent:edge
    container_name: bytebot-agent
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/bytebotdb}
      - BYTEBOT_DESKTOP_BASE_URL=${BYTEBOT_DESKTOP_BASE_URL:-http://bytebot-desktop:9990}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - postgres
    networks:
      - bytebot-network

  bytebot-ui:
    image: ghcr.io/bytebot-ai/bytebot-ui:edge
    container_name: bytebot-ui
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - BYTEBOT_AGENT_BASE_URL=${BYTEBOT_AGENT_BASE_URL:-http://bytebot-agent:9991}
      - BYTEBOT_DESKTOP_VNC_URL=${BYTEBOT_DESKTOP_VNC_URL:-http://bytebot-desktop:9990/websockify}
    depends_on:
      - bytebot-agent
    networks:
      - bytebot-network
      - coolify-network
    labels:
      - "traefik.enable=true"

      # Router (high priority so it wins over any auto router)
      - "traefik.http.routers.bytebot-ui-auth.rule=Host(`bytebot.rotz.app`)"
      - "traefik.http.routers.bytebot-ui-auth.entrypoints=websecure"
      - "traefik.http.routers.bytebot-ui-auth.tls=true"
      - "traefik.http.routers.bytebot-ui-auth.priority=1000"

      # Service: point Traefik to the container's internal port
      - "traefik.http.services.bytebot-ui-svc.loadbalancer.server.port=9992"
      - "traefik.http.routers.bytebot-ui-auth.service=bytebot-ui-svc"

      # Use Coolify's Traefik network
      - "traefik.docker.network=coolify-network"

      # Basic Auth (username: rotz, password: L0steden20)
      - "traefik.http.routers.bytebot-ui-auth.middlewares=bytebot-auth"
      - "traefik.http.middlewares.bytebot-auth.basicauth.users=rotz:$$apr1$$ykqU5IxB$$tky4ZvtZ2YEvG2NNFddoP1"

networks:
  bytebot-network:
    driver: bridge
  coolify-network:
    external: true

volumes:
  postgres_data:
