version: 1.0.9
name: bytebot

services:
  bytebot-desktop:
    image: ghcr.io/bytebot-ai/bytebot-desktop:edge
    shm_size: "2g"
    container_name: bytebot-desktop
    restart: unless-stopped
    hostname: computer
    privileged: true
    ports:
      - "9990:9990"
    environment:
      - DISPLAY=:0
    networks:
      - bytebot-network

  postgres:
    image: postgres:16-alpine
    container_name: bytebot-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=bytebotdb
    networks:
      - bytebot-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  bytebot-agent:
    image: ghcr.io/bytebot-ai/bytebot-agent:edge
    container_name: bytebot-agent
    restart: unless-stopped
    ports:
      - "9991:9991"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/bytebotdb}
      - BYTEBOT_DESKTOP_BASE_URL=${BYTEBOT_DESKTOP_BASE_URL:-http://bytebot-desktop:9990}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - postgres
    networks:
      - bytebot-network

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    container_name: traefik-forward-auth
    restart: unless-stopped
    environment:
      - PROVIDERS_GOOGLE_CLIENT_ID=1035190682648-p60ao4phea2hbovo087bcao80741u10o.apps.googleusercontent.com
      - PROVIDERS_GOOGLE_CLIENT_SECRET=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
      - SECRET=bytebot-oauth-secret-key-2025
      - WHITELIST=jerome@rotz.host
      - AUTH_HOST=auth.rotz.app
      - COOKIE_DOMAIN=rotz.app
      - INSECURE_COOKIE=false
      - LOG_LEVEL=debug
      - URL_PATH=/_oauth
      - COOKIE_NAME=_forward_auth
      - CSRF_COOKIE_NAME=_forward_auth_csrf
      - DEFAULT_ACTION=auth
      - DEFAULT_PROVIDER=google
    networks:
      - bytebot-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4181/"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # Auth service router
      - "traefik.http.routers.auth.rule=Host(`auth.rotz.app`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=letsencrypt"
      - "traefik.http.services.auth.loadbalancer.server.port=4181"

  bytebot-ui:
    image: ghcr.io/bytebot-ai/bytebot-ui:edge
    container_name: bytebot-ui
    restart: unless-stopped
    ports:
      - "9992:9992"
    environment:
      - NODE_ENV=production
      - BYTEBOT_AGENT_BASE_URL=${BYTEBOT_AGENT_BASE_URL:-http://bytebot-agent:9991}
      - BYTEBOT_DESKTOP_VNC_URL=${BYTEBOT_DESKTOP_VNC_URL:-http://bytebot-desktop:9990/websockify}
    depends_on:
      - bytebot-agent
      - traefik-forward-auth
    networks:
      - bytebot-network
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # Define the OAuth forward auth middleware
      - "traefik.http.middlewares.bytebot-oauth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.bytebot-oauth.forwardauth.authResponseHeaders=X-Forwarded-User,X-Forwarded-Email"
      - "traefik.http.middlewares.bytebot-oauth.forwardauth.trustForwardHeader=true"
      
      # Define service
      - "traefik.http.services.bytebot-ui.loadbalancer.server.port=9992"
      
      # Define router with OAuth middleware
      - "traefik.http.routers.bytebot-ui.rule=Host(`bytebot.rotz.app`)"
      - "traefik.http.routers.bytebot-ui.middlewares=bytebot-oauth"
      - "traefik.http.routers.bytebot-ui.service=bytebot-ui"
      - "traefik.http.routers.bytebot-ui.entrypoints=websecure"
      - "traefik.http.routers.bytebot-ui.tls.certresolver=letsencrypt"

networks:
  bytebot-network:
    driver: bridge

volumes:
  postgres_data:

