name: bytebot

services:
  bytebot-desktop:
    image: ghcr.io/bytebot-ai/bytebot-desktop:edge
    shm_size: "2g"
    container_name: bytebot-desktop
    restart: unless-stopped
    hostname: computer
    privileged: true
    ports:
      - "9990:9990"
    environment:
      - DISPLAY=:0
    networks:
      - bytebot-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bytebot-desktop.rule=Host(`bytebot-desktop.rotz.app`)"
      - "traefik.http.routers.bytebot-desktop.entrypoints=websecure"
      - "traefik.http.routers.bytebot-desktop.tls.certresolver=letsencrypt"
      - "traefik.http.services.bytebot-desktop.loadbalancer.server.port=9990"

  postgres:
    image: postgres:16-alpine
    container_name: bytebot-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=bytebotdb
    networks:
      - bytebot-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  bytebot-agent:
    image: ghcr.io/bytebot-ai/bytebot-agent:edge
    container_name: bytebot-agent
    restart: unless-stopped
    ports:
      - "9991:9991"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/bytebotdb}
      - BYTEBOT_DESKTOP_BASE_URL=${BYTEBOT_DESKTOP_BASE_URL:-http://bytebot-desktop:9990}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - postgres
    networks:
      - bytebot-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bytebot-agent.rule=Host(`bytebot-agent.rotz.app`)"
      - "traefik.http.routers.bytebot-agent.entrypoints=websecure"
      - "traefik.http.routers.bytebot-agent.tls.certresolver=letsencrypt"
      - "traefik.http.services.bytebot-agent.loadbalancer.server.port=9991"

  # Simple authentication proxy using nginx with basic auth
  auth-proxy:
    image: nginx:alpine
    container_name: bytebot-auth-proxy
    restart: unless-stopped
    ports:
      - "8888:80"
    volumes:
      - /home/ubuntu/bytebot/docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - /home/ubuntu/bytebot/docker/htpasswd:/etc/nginx/htpasswd:ro
    depends_on:
      - bytebot-ui
    networks:
      - bytebot-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bytebot-auth.rule=Host(`bytebot.rotz.app`)"
      - "traefik.http.routers.bytebot-auth.entrypoints=websecure"
      - "traefik.http.routers.bytebot-auth.tls.certresolver=letsencrypt"
      - "traefik.http.services.bytebot-auth.loadbalancer.server.port=80"

  bytebot-ui:
    image: ghcr.io/bytebot-ai/bytebot-ui:edge
    container_name: bytebot-ui
    restart: unless-stopped
    ports:
      - "9992:9992"
    environment:
      - NODE_ENV=production
      - BYTEBOT_AGENT_BASE_URL=${BYTEBOT_AGENT_BASE_URL:-http://bytebot-agent:9991}
      - BYTEBOT_DESKTOP_VNC_URL=${BYTEBOT_DESKTOP_VNC_URL:-http://bytebot-desktop:9990/websockify}
    depends_on:
      - bytebot-agent
    networks:
      - bytebot-network
    # No direct Traefik labels - accessed through auth-proxy

networks:
  bytebot-network:
    driver: bridge

volumes:
  postgres_data:

